' Gambas class file

Public Picon As PiconZero
Public Ultrasonic As Ultrasonic

Public Sub Form_Open()
Dim bCheckBoxes As Boolean[] = Settings["CheckBoxes", [False, False, False, False]]  'Get last settings of the CheckBoxes on the Ultrasonic Tab or set all as False

  Me.Picon = New PiconZero
  Me.Ultrasonic = New Ultrasonic(20)

  DistanceTimer.Start
  ObstacleTimer.Start

  TextBoxSpeak.text = Settings["Speak", "rabbit attack imminent"]             'What to say if there is an obstical 10cms or less away from the Ultrasonic sensor
  TabStrip1.index = Settings["Tab", 0]                                        'Get and set the last Tab used

  CheckBoxSensor0.value = bCheckBoxes[0]                                      'Set the last value of each CheckBox on the Ulrasonic Tab
  CheckBoxSensor1.value = bCheckBoxes[1]                                      'Set the last value of each CheckBox on the Ulrasonic Tab
  CheckBoxSensor2.value = bCheckBoxes[2]                                      'Set the last value of each CheckBox on the Ulrasonic Tab
  CheckBoxSensor3.value = bCheckBoxes[3]                                      'Set the last value of each CheckBox on the Ulrasonic Tab
  
  Settings.Read(Me, "Window")                                                 'Read last Window size and position

End

Public Sub ServoSliders_Change()
  Me.Picon.SetServo(Last.Tag, Last.Value)
End

Public Sub DistanceTimer_Timer()
  Dim Distance As Integer = Me.Ultrasonic.GetDistance()
  If Distance < 0 Then Return                                                 'To stop the odd negative figure appearing
  LabelDistance.text = Distance & "cm"
    If Distance <= 10 Then
    LabelDistance.Background = Color.Red
    Shell "espeak " & Shell$(TextBoxSpeak.Text) Wait
    Wait 0.1
  Else
    LabelDistance.Background = Color.DarkGreen
  Endif
End

Public Sub ObstacleTimer_Timer()
  Dim oObj As Object
  Dim iColour As Integer[] = [Color.red, Color.Green]                             'Colour chooser (True= -1, False = 0)

  ObstacleSensor0.Value = Me.Picon.GetObstacleSensor(0)
  ObstacleSensor1.Value = Me.Picon.GetObstacleSensor(1)
  ObstacleSensor2.Value = Me.Picon.GetObstacleSensor(2)
  ObstacleSensor3.Value = Me.Picon.GetObstacleSensor(3)

  TextBoxSensor0.Background = iColour[ObstacleSensor0.Value + 1]                  'Change TextBox Background depending on the ObsicalSensor Value
  TextBoxSensor1.Background = iColour[ObstacleSensor1.Value + 1]                  'Change TextBox Background depending on the ObsicalSensor Value
  TextBoxSensor2.Background = iColour[ObstacleSensor2.Value + 1]                  'Change TextBox Background depending on the ObsicalSensor Value
  TextBoxSensor3.Background = iColour[ObstacleSensor3.Value + 1]                  'Change TextBox Background depending on the ObsicalSensor Value

End

Public Sub MotorSliders_Change()
  Me.Picon.SetMotor(Last.Tag, Last.Value)
End

Public Sub MotorsStop_Click()
  SliderMotorA.Value = 0
  SliderMotorB.Value = 0
End

Public Sub Form_Resize()
  Dim NewFontSize As Float = (Me.Width - 50) / 5 
  
  If NewFontSize < 5 Then NewFontSize = 5
  LabelDistance.Font.Size = NewFontSize
End
 
Public Sub Form_Close()
Dim bCheckBoxes As New Boolean[4]                                             'Array for the values of each CheckBox on the Ulrasonic Tab

  Me.Ultrasonic.Close
  Settings["Speak"] = TextBoxSpeak.text                                       'Save the words to Speak
  Settings["Tab"] = TabStrip1.Index                                           'Save the Tab that's open
  
  bCheckBoxes[0] = CheckBoxSensor0.value                                      'Set the value of the bCheckBoxes array based on the value of the CheckBox
  bCheckBoxes[1] = CheckBoxSensor1.value                                      'Set the value of the bCheckBoxes array based on the value of the CheckBox
  bCheckBoxes[2] = CheckBoxSensor2.value                                      'Set the value of the bCheckBoxes array based on the value of the CheckBox
  bCheckBoxes[3] = CheckBoxSensor3.value                                      'Set the value of the bCheckBoxes array based on the value of the CheckBox
  Settings["CheckBoxes"] = bCheckBoxes                                        'Save the Array
  Settings.Write(Me, "Window")                                                'Save window settings
  
End

Public Sub AllSensors_Click()                                                 'Activated when any of the 4 Ultrasonic Tab CheckBoxes are clicked

If CheckBoxSensor0.Value Or CheckBoxSensor1.Value Or CheckBoxSensor2.Value Or CheckBoxSensor3.Value Then HBoxSensors.Visible = True Else HBoxSensors.Visible = False 'Hide the HBox of no CheckBoxes selected                                                'Hide the HBox 

TextBoxSensor0.Visible = CheckBoxSensor0.Value                                'Make the TextBox visible if the CheckBox is checked
TextBoxSensor1.Visible = CheckBoxSensor1.Value                                'Make the TextBox visible if the CheckBox is checked
TextBoxSensor2.Visible = CheckBoxSensor2.Value                                'Make the TextBox visible if the CheckBox is checked
TextBoxSensor3.Visible = CheckBoxSensor3.Value                                'Make the TextBox visible if the CheckBox is checked

End
